digraph UML_Class_diagram {
    graph [
    label="UML Class Diagram for GameSession and GameState"
    labelloc="t"
    fontname="Helvetica,Arial,sans-serif"
    rankdir=UD
    ]
    node [
    fontname="Helvetica,Arial,sans-serif"
    shape=record
    style=filled
    fillcolor=gray95
    ]
    edge [fontname="Helvetica,Arial,sans-serif"]

    GameSetup [label="{GameSetup | + read_start_data(): void}"]
    AbstractPlayer [label="{AbstractPlayer | ...}"]
    FieldRenderer [label="{FieldRenderer | ...}"]
    DispatcherCLI [label="{DispatcherCLI | ...}"]
    Player [label="{Player | ...}"]
    Enemy [label="{Enemy | ...}"]
    AbilitiesManager [label="{AbilitiesManager | + use_ability(): bool}"]

    GameSession [label="{GameSession | - setup: GameSetup | - field_renderer: FieldRenderer | - cli: DispatcherCLI | - player: Player | - enemy: Enemy | - abilities_manager: AbilitiesManager | + run_game_loop(): void | + place_ships(): void | + execute_shot(shooter: AbstractPlayer, target: AbstractPlayer): bool | + use_ability(): bool | + serialize(os: ostream): void | + deserialize(is: istream): void}"]

    GameState [label="{GameState | - session: GameSession ref | + save(filename: const char*): void | + load(filename: const char*): void} | + operator\<\<(os: ostream, state: GameState): ostream& | + operator\>\>(is: istream, state: GameState): istream&}"]

    GameSession -> GameSetup [label="association" arrowhead=open]
    GameSession -> FieldRenderer [label="association" arrowhead=open]
    GameSession -> DispatcherCLI [label="association" arrowhead=open]
    GameSession -> Player [label="association" arrowhead=open]
    GameSession -> Enemy [label="association" arrowhead=open]
    GameSession -> AbilitiesManager [label="association" arrowhead=open]
    GameSession -> AbstractPlayer [label="dependency" arrowhead=open style=dashed]

    GameState -> GameSession [label="association" arrowhead=open]
}
