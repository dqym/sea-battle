digraph UML_Class_diagram {
    graph [
    label="UML Class Diagram for Game Control System"
    labelloc="t"
    fontname="Helvetica,Arial,sans-serif"
    rankdir=TB
    ]
    node [
    fontname="Helvetica,Arial,sans-serif"
    shape=record
    style=filled
    fillcolor=gray95
    ]
    edge [fontname="Helvetica,Arial,sans-serif"]

    GameControl [label="{GameControl\<T\> | - session: GameSession ref | - cmd_handler: T | - state: GameState | - current_command: CommandHandler::command | + run(): void}"]
    CLIHandler [label="{CLIHandler | - binds: map<char, CommandHandler::command> | - requested_keys: map<string, CommandHandler::command> | + read_command(): CommandHandler::command | + read_coordinate(): pair<char, int> | + reload_binds(): void}"]
    CommandHandler [label="{CommandHandler | + read_command(): CommandHandler::command | + read_coordinate(): pair<char, int>}"]
    ConsoleIO [label="{ConsoleIO | + print(text: Args...): void | + print_error(text: Args...): void | + print_success(text: Args...): void | + print_warning(text: Args...): void | + get_char(): char | + char_available(): bool | + get_line(): string | + get_coordinate(): pair<char, int>}"]
    FieldRenderer [label="{FieldRenderer\<Renderer\> | - renderer: Renderer | + display(player_board: Board, enemy_board: Board): void}"]
    ConsoleRenderer [label="{ConsoleRenderer | + display(player_board: Board, enemy_board: Board): void | - print_separating_row(size: int): void | - print_data_row(board: Board, rw_counter: int, is_enemy: bool): void | - print_letters_row(size: int): void}"]
    GameSession [label="{GameSession | + run_game_step(coordinates: pair<char, int>): step_result | + use_ability(): void}"]
    GameState [label="{GameState | - session: GameSession ref | + save(filename: const char*): bool | + load(filename: const char*): bool}"]

    GameControl -> GameSession [label="association" arrowhead=open]
    GameControl -> CommandHandler [label="dependency" arrowhead=open style=dashed]
    GameControl -> GameState [label="association" arrowhead=open]
    GameControl -> ConsoleIO [label="association" arrowhead=open]
    CLIHandler -> CommandHandler [label="inheritance" arrowhead=empty]
    CLIHandler -> ConsoleIO [label="association" arrowhead=open]
    FieldRenderer -> ConsoleRenderer [label="template instantiation" arrowhead=open style=dashed]
    FieldRenderer -> Renderer [label="template parameter" arrowhead=open style=dashed]
    ConsoleRenderer -> ConsoleIO [label="association" arrowhead=open]
    GameSession -> FieldRenderer [label="association" arrowhead=open]
    GameState -> GameSession [label="association" arrowhead=open]
}
